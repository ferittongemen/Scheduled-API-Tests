name: Run Tests and Publish Allure Report to GitHub Pages

on:
  # schedule:
  #   - cron: '38 6,18 * * *'  # Sabah ve akşam 09:38 (Türkiye saati UTC+3)
  workflow_dispatch:  # Manuel tetikleme desteği

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - name: Kodu Clone Et
        uses: actions/checkout@v3

      - name: Python Kur
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Bağımlılıkları Kur
        run: |
          pip install pytest requests allure-pytest  # Gerekli bağımlılıkları kur

      - name: Allure CLI Kur
        run: |
          curl -o allure-2.13.8.tgz -L https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.13.8/allure-commandline-2.13.8.tgz
          tar -zxvf allure-2.13.8.tgz
          sudo mv allure-2.13.8 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      - name: API Testlerini Çalıştır
        run: pytest --alluredir=allure-results -v  # Test sonuçlarını Allure formatında kaydet

      - name: Allure Raporu Oluştur
        run: allure generate --clean --output allure-report

      - name: Allure Raporunu GitHub Pages'e Yükle
        if: success()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages

      - name: Slack'e Allure Rapor Linkini Gönder
        if: success()  # Sadece başarı durumunda çalıştır
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          ALLURE_REPORT_URL="https://ferittongemen.github.io/Scheduled-API-Tests/"
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Yeni Allure Raporu yayında: '"$ALLURE_REPORT_URL"'"}' $SLACK_WEBHOOK_URL